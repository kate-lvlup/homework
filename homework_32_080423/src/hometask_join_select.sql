CREATE DATABASE customer_orders_db;

DROP TABLE public.salesperson_product;
DROP TABLE public.salespersons;
DROP TABLE public.order;
DROP TABLE public.product_view;
DROP TABLE public.product;
DROP TABLE public.customers;



CREATE TABLE public.customers
(
    customer_id    bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_name  varchar(255) NOT NULL UNIQUE,
    customer_email varchar(255) NOT NULL UNIQUE,
    reg_date       date
);

INSERT INTO public.customers(customer_name, customer_email, reg_date)
VALUES ('John', 'john@test.com', '2022-01-03'),
       ('Jane', 'jane@test.com', '2022-01-03'),
       ('Bob', 'bob@test.com', '2021-01-03'),
       ('British', 'british@test.com', '2021-01-03'),
       ('Sarahs', 'sarahs@test.com', '2022-01-03'),
       ('Carcus', 'carcus@test.com', '2023-01-03'),
       ('Hikoza', 'hikoza@test.com', '2022-01-03'),
       ('Bartak', 'bartak@test.com', '2022-01-03'),
       ('Tommie', 'tommie@test.com', '2022-01-03'),
       ('Jessica', 'jessica@test.com', '2022-01-03'),
       ('Austin', 'austin@test.com', '2022-01-03'),
       ('Barak', 'barak@test.com', '2022-01-03'),
       ('Tom', 'tom@test.com', '2022-01-03'),
       ('Jerry', 'jerry@test.com', '2023-01-03'),
       ('Donald', 'donald@test.com', '2023-01-03'),
       ('Suzy', 'suzy@test.com', '2023-01-03'),
       ('Mia', 'mia@test.com', '2023-01-03'),
       ('Lian', 'lian@test.com', '2023-01-03');

CREATE TABLE public.product
(
    product_id    bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_name  varchar(255) NOT NULL UNIQUE,
    product_price decimal      NOT NULL
);

INSERT INTO public.product(product_name, product_price)
VALUES ('Apple', 1.0),
       ('Orange', 2.0),
       ('Banana', 0.50),
       ('Grape', 0.25),
       ('Potato', 4.25),
       ('Pepper', 5.45),
       ('Carrot', 1.65),
       ('Pineapple', 9.99),
       ('Cherry', 12.33);

CREATE TABLE public.product_view
(
    product_view_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id      bigint,
    foreign key (product_id) references product (product_id),
    view_date       date,
    customer_id     bigint,
    foreign key (customer_id) references customers (customer_id)
);

INSERT INTO public.product_view(product_id, view_date, customer_id)
VALUES (1, '2022-01-01', 3),
       (2, '2022-01-01', 3),
       (3, '2022-01-01', 3),
       (4, '2022-01-01', 3),
       (5, '2022-01-01', 3),
       (6, '2022-01-01', 3),
       (7, '2022-01-01', 3),
       (8, '2022-01-01', 3),
       (9, '2022-01-01', 3),
       (2, '2022-01-01', 2),
       (3, '2022-01-02', 4),
       (5, '2022-01-02', 1),
       (6, '2022-01-02', 5),
       (3, '2022-01-02', 4),
       (3, '2022-01-03', 5),
       (5, '2022-01-03', 7),
       (5, '2022-01-03', 8),
       (9, '2022-01-04', 9),
       (5, '2022-01-04', 2),
       (1, '2022-01-04', 3),
       (6, '2022-01-05', 4),
       (7, '2022-01-05', 5),
       (9, '2022-01-05', 6),
       (1, '2022-01-01', 6),
       (2, '2022-01-01', 6),
       (5, '2022-01-01', 6),
       (6, '2022-01-01', 6),
       (7, '2022-01-01', 6),
       (8, '2022-01-01', 6),
       (2, '2022-01-01', 6),
       (3, '2022-01-02', 6),
       (5, '2022-01-02', 6),
       (2, '2022-01-02', 6),
       (3, '2022-01-02', 6),
       (3, '2022-01-03', 6),
       (5, '2022-01-03', 6),
       (5, '2022-01-03', 6),
       (9, '2022-01-04', 6),
       (5, '2022-01-04', 6),
       (1, '2022-01-04', 6),
       (6, '2022-01-05', 6),
       (7, '2022-01-05', 6),
       (9, '2022-01-05', 6),
       (6, '2022-01-02', 5),
       (3, '2022-01-02', 4),
       (3, '2022-01-03', 5),
       (5, '2022-01-03', 7),
       (5, '2022-01-03', 8),
       (9, '2022-01-04', 9),
       (5, '2022-01-04', 2),
       (6, '2022-01-04', 3),
       (6, '2022-01-05', 4),
       (6, '2022-01-05', 16),
       (6, '2022-01-05', 15),
       (6, '2022-01-01', 14),
       (6, '2022-01-01', 13),
       (6, '2022-01-01', 12),
       (6, '2022-01-01', 11),
       (6, '2022-01-01', 10),
       (6, '2022-01-01', 9),
       (6, '2022-01-01', 8),
       (6, '2022-01-02', 7),
       (6, '2022-01-02', 6),
       (6, '2022-01-03', 5),
       (6, '2022-01-03', 4),
       (6, '2022-01-03', 3),
       (6, '2022-01-04', 2),
       (6, '2022-01-04', 1),
       (1, '2022-01-04', 3),
       (6, '2022-01-05', 4),
       (7, '2022-01-05', 5),
       (9, '2022-01-05', 6),
       (1, '2022-01-01', 6),
       (2, '2022-01-01', 6),
       (5, '2022-01-01', 6),
       (6, '2022-01-01', 6),
       (7, '2022-01-01', 6),
       (8, '2022-01-01', 6),
       (6, '2022-01-01', 1),
       (6, '2022-01-01', 2),
       (6, '2022-01-01', 3),
       (6, '2022-01-01', 4),
       (6, '2022-01-01', 5),
       (6, '2022-01-01', 6),
       (6, '2022-01-01', 7),
       (6, '2022-01-01', 8),
       (6, '2022-01-01', 9),
       (6, '2022-01-01', 10),
       (6, '2022-01-01', 11),
       (6, '2022-01-01', 12),
       (6, '2022-01-01', 13),
       (6, '2022-01-01', 14),
       (6, '2022-01-01', 15),
       (6, '2022-01-01', 16),
       (6, '2022-01-01', 17),
       (6, '2022-01-01', 18),
       (6, '2022-01-01', 6),
       (6, '2022-01-01', 6),
       (6, '2022-01-01', 6),
       (3, '2022-01-02', 6);

CREATE TABLE public.order
(
    order_id    bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id bigint,
    foreign key (customer_id) references customers (customer_id),
    product_id  bigint,
    foreign key (product_id) references product (product_id),
    quantity    int,
    unit_price  decimal,
    order_date  date
);

INSERT INTO public.order(customer_id, product_id, quantity, unit_price, order_date)
VALUES (1, 1, 2, 10.00, '2022-01-01'),
       (1, 2, 1, 20.00, '2022-01-05'),
       (2, 3, 3, 15.00, '2022-01-05'),
       (3, 6, 4, 5.00, '2022-01-05'),
       (4, 8, 1, 20.00, '2022-01-05'),
       (6, 9, 3, 15.00, '2022-01-05'),
       (5, 6, 1, 20.00, '2022-01-05'),
       (9, 3, 3, 15.00, '2022-01-05'),
       (8, 2, 1, 20.00, '2022-01-05'),
       (11, 6, 3, 15.00, '2022-02-01'),
       (10, 5, 1, 20.00, '2022-02-01'),
       (1, 6, 2, 10.00, '2022-02-01'),
       (2, 6, 1, 20.00, '2022-02-05'),
       (3, 6, 3, 15.00, '2022-02-05'),
       (3, 6, 4, 5.00, '2022-02-05'),
       (4, 8, 1, 20.00, '2022-02-05'),
       (6, 9, 3, 15.00, '2022-02-05'),
       (5, 6, 1, 20.00, '2022-02-05'),
       (7, 6, 3, 15.00, '2022-02-05'),
       (8, 1, 1, 20.00, '2022-02-05'),
       (9, 5, 3, 15.00, '2022-02-05'),
       (10, 5, 1, 20.00, '2022-02-05'),
       (11, 1, 2, 10.00, '2022-02-01'),
       (12, 2, 1, 20.00, '2022-02-05'),
       (12, 3, 3, 15.00, '2022-02-05'),
       (13, 6, 4, 5.00, '2022-02-05'),
       (14, 8, 1, 20.00, '2022-02-05'),
       (16, 1, 3, 15.00, '2022-02-05'),
       (15, 6, 1, 20.00, '2022-02-05'),
       (17, 3, 3, 15.00, '2022-02-05'),
       (18, 2, 1, 20.00, '2022-02-05'),
       (1, 1, 2, 10.00, '2022-02-01'),
       (2, 2, 1, 20.00, '2022-02-05'),
       (3, 3, 3, 15.00, '2022-02-05'),
       (3, 6, 4, 5.00, '2022-02-05'),
       (4, 8, 1, 20.00, '2022-02-05'),
       (6, 9, 3, 15.00, '2022-02-05'),
       (5, 6, 1, 20.00, '2022-02-05'),
       (7, 5, 3, 15.00, '2022-02-05'),
       (8, 2, 1, 20.00, '2022-02-05'),
       (9, 7, 3, 15.00, '2022-02-05'),
       (10, 5, 1, 20.00, '2022-02-05'),
       (11, 1, 2, 10.00, '2022-02-01'),
       (12, 1, 1, 20.00, '2022-02-05'),
       (12, 5, 3, 15.00, '2022-02-05'),
       (13, 6, 4, 5.00, '2022-02-05'),
       (14, 8, 1, 20.00, '2022-02-05'),
       (16, 9, 3, 15.00, '2022-02-05'),
       (15, 6, 1, 20.00, '2022-02-05'),
       (17, 3, 3, 15.00, '2022-02-05'),
       (18, 2, 1, 20.00, '2022-02-05'),
       (11, 7, 3, 15.00, '2022-02-05'),
       (10, 5, 1, 20.00, '2022-02-05'),
       (13, 5, 3, 15.00, '2022-02-05'),
       (16, 1, 1, 20.00, '2022-02-05'),
       (17, 1, 3, 15.00, '2022-02-05'),
       (9, 2, 1, 20.00, '2022-02-05'),
       (11, 6, 3, 15.00, '2022-02-05'),
       (10, 9, 1, 20.00, '2022-02-05'),
       (11, 3, 3, 15.00, '2022-02-05'),
       (12, 2, 1, 20.00, '2022-02-05'),
       (12, 3, 3, 15.00, '2022-02-05'),
       (1, 1, 2, 10.00, '2022-02-01'),
       (1, 2, 1, 20.00, '2022-02-05'),
       (2, 3, 3, 15.00, '2022-02-05'),
       (3, 6, 4, 5.00, '2022-02-05'),
       (14, 8, 1, 20.00, '2022-02-05'),
       (6, 9, 3, 15.00, '2022-02-05'),
       (15, 6, 1, 20.00, '2022-02-05'),
       (1, 3, 3, 15.00, '2022-03-05'),
       (2, 2, 1, 20.00, '2022-03-05'),
       (11, 7, 3, 15.00, '2022-03-05'),
       (10, 5, 1, 20.00, '2022-03-05'),
       (3, 5, 3, 15.00, '2022-03-05'),
       (16, 1, 1, 20.00, '2022-03-05'),
       (7, 1, 3, 15.00, '2022-03-05'),
       (18, 2, 1, 20.00, '2022-03-05'),
       (11, 6, 3, 15.00, '2022-03-05'),
       (10, 9, 1, 20.00, '2022-03-05'),
       (11, 3, 3, 15.00, '2022-03-05'),
       (12, 2, 1, 20.00, '2022-03-05'),
       (9, 3, 3, 15.00, '2022-03-05'),
       (8, 2, 1, 20.00, '2022-03-05'),
       (11, 7, 3, 15.00, '2022-03-05'),
       (10, 5, 1, 20.00, '2022-03-05'),
       (1, 5, 3, 15.00, '2022-03-05'),
       (2, 1, 1, 20.00, '2022-03-05'),
       (3, 1, 3, 15.00, '2022-03-05'),
       (4, 2, 1, 20.00, '2022-03-05'),
       (5, 6, 3, 15.00, '2022-03-05'),
       (5, 9, 1, 20.00, '2022-03-05'),
       (6, 3, 3, 15.00, '2022-03-05'),
       (7, 2, 1, 20.00, '2022-03-05'),
       (8, 3, 3, 15.00, '2022-03-05'),
       (9, 2, 1, 20.00, '2022-03-05'),
       (10, 7, 3, 15.00, '2022-03-05'),
       (11, 5, 1, 20.00, '2022-03-05'),
       (13, 5, 3, 15.00, '2022-03-05'),
       (12, 1, 1, 20.00, '2022-03-05'),
       (13, 1, 3, 15.00, '2022-03-05'),
       (14, 2, 1, 20.00, '2022-03-05'),
       (15, 6, 3, 15.00, '2022-03-05'),
       (16, 9, 1, 20.00, '2022-03-05'),
       (17, 3, 3, 15.00, '2022-03-05'),
       (18, 2, 1, 20.00, '2022-03-05'),
       (12, 3, 3, 15.00, '2022-01-01'),
       (12, 3, 3, 15.00, '2022-02-01'),
       (12, 3, 3, 15.00, '2022-03-01'),
       (12, 3, 3, 15.00, '2022-04-01'),
       (12, 3, 3, 15.00, '2022-05-01'),
       (12, 3, 3, 15.00, '2022-06-01'),
       (12, 3, 3, 15.00, '2022-07-01'),
       (12, 3, 3, 15.00, '2022-08-01'),
       (12, 3, 3, 15.00, '2022-09-01'),
       (12, 3, 3, 15.00, '2022-10-05'),
       (12, 3, 3, 15.00, '2022-11-05'),
       (12, 3, 3, 15.00, '2022-12-05'),
       (1, 1, 2, 10.00, '2022-01-01'),
       (1, 2, 1, 20.00, '2022-01-05'),
       (2, 3, 3, 15.00, '2022-01-05'),
       (3, 6, 4, 5.00, '2022-01-05'),
       (4, 8, 1, 20.00, '2022-01-05'),
       (6, 9, 3, 15.00, '2022-01-05'),
       (5, 6, 1, 20.00, '2022-01-05'),
       (9, 3, 3, 15.00, '2022-01-05'),
       (8, 2, 1, 20.00, '2022-01-05'),
       (11, 6, 3, 15.00, '2022-02-01'),
       (10, 5, 1, 20.00, '2022-02-01'),
       (1, 6, 2, 10.00, '2022-02-01'),
       (2, 6, 1, 20.00, '2022-02-05'),
       (3, 6, 3, 15.00, '2022-02-05'),
       (3, 6, 4, 5.00, '2022-02-05'),
       (4, 8, 1, 20.00, '2022-02-05'),
       (6, 9, 3, 15.00, '2022-02-05'),
       (5, 6, 1, 20.00, '2022-02-05'),
       (7, 6, 3, 15.00, '2022-02-05'),
       (8, 1, 1, 20.00, '2022-02-05'),
       (9, 5, 3, 15.00, '2022-02-05'),
       (10, 5, 1, 20.00, '2022-02-05'),
       (11, 1, 2, 10.00, '2022-02-01'),
       (12, 2, 1, 20.00, '2022-02-05'),
       (12, 3, 3, 15.00, '2022-02-05'),
       (13, 6, 4, 5.00, '2022-02-05'),
       (14, 8, 1, 20.00, '2022-02-05'),
       (16, 1, 3, 15.00, '2022-02-05'),
       (15, 6, 1, 20.00, '2022-02-05'),
       (17, 3, 3, 15.00, '2022-02-05'),
       (18, 2, 1, 20.00, '2022-02-05'),
       (1, 1, 2, 10.00, '2022-02-01'),
       (2, 2, 1, 20.00, '2022-02-05'),
       (3, 3, 3, 15.00, '2022-02-05'),
       (3, 6, 4, 5.00, '2022-02-05'),
       (4, 8, 1, 20.00, '2022-02-05'),
       (6, 9, 3, 15.00, '2022-02-05'),
       (5, 6, 1, 20.00, '2022-02-05'),
       (7, 5, 3, 15.00, '2022-02-05'),
       (8, 2, 1, 20.00, '2022-02-05'),
       (9, 7, 3, 15.00, '2022-02-05'),
       (10, 5, 1, 20.00, '2022-02-05'),
       (11, 1, 2, 10.00, '2022-02-01'),
       (12, 1, 1, 20.00, '2022-02-05'),
       (12, 5, 3, 15.00, '2022-02-05'),
       (13, 6, 4, 5.00, '2022-02-05'),
       (14, 8, 1, 20.00, '2022-02-05'),
       (16, 9, 3, 15.00, '2022-02-05'),
       (15, 6, 1, 20.00, '2022-02-05'),
       (17, 3, 3, 15.00, '2022-02-05'),
       (18, 2, 1, 20.00, '2022-02-05'),
       (11, 7, 3, 15.00, '2022-02-05'),
       (10, 5, 1, 20.00, '2022-02-05'),
       (13, 5, 3, 15.00, '2022-02-05'),
       (16, 1, 1, 20.00, '2022-02-05'),
       (17, 1, 3, 15.00, '2022-02-05'),
       (9, 2, 1, 20.00, '2022-02-05'),
       (11, 6, 3, 15.00, '2022-02-05'),
       (10, 9, 1, 20.00, '2022-02-05'),
       (11, 3, 3, 15.00, '2022-02-05'),
       (12, 2, 1, 20.00, '2022-02-05'),
       (12, 3, 3, 15.00, '2022-02-05'),
       (1, 1, 2, 10.00, '2022-02-01'),
       (1, 2, 1, 20.00, '2022-02-05'),
       (2, 3, 3, 15.00, '2022-02-05'),
       (3, 6, 4, 5.00, '2023-01-05'),
       (14, 8, 1, 20.00, '2023-02-05'),
       (6, 9, 3, 15.00, '2023-02-05'),
       (15, 6, 1, 20.00, '2023-03-05'),
       (1, 3, 3, 15.00, '2023-03-05'),
       (2, 2, 1, 20.00, '2023-03-05'),
       (11, 7, 3, 15.00, '2023-03-05'),
       (10, 5, 1, 20.00, '2023-03-05'),
       (3, 5, 3, 15.00, '2023-03-05'),
       (16, 1, 1, 20.00, '2023-03-05'),
       (7, 1, 3, 15.00, '2023-03-05'),
       (18, 2, 1, 20.00, '2023-02-05'),
       (11, 6, 3, 15.00, '2023-01-05'),
       (10, 9, 1, 20.00, '2023-03-05'),
       (11, 3, 3, 15.00, '2023-03-05'),
       (12, 2, 1, 20.00, '2023-03-05'),
       (9, 3, 3, 15.00, '2023-03-05'),
       (8, 2, 1, 20.00, '2023-03-05'),
       (11, 7, 3, 15.00, '2023-03-05'),
       (10, 5, 1, 20.00, '2023-03-05'),
       (1, 5, 3, 15.00, '2023-03-05'),
       (2, 1, 1, 20.00, '2023-03-05'),
       (3, 1, 3, 15.00, '2023-03-05'),
       (4, 2, 1, 20.00, '2023-03-05'),
       (5, 6, 3, 15.00, '2023-03-05'),
       (5, 9, 1, 20.00, '2023-03-05'),
       (6, 3, 3, 15.00, '2023-03-05'),
       (7, 2, 1, 20.00, '2023-03-05'),
       (8, 3, 3, 15.00, '2023-03-05'),
       (9, 2, 1, 20.00, '2023-03-05'),
       (10, 7, 3, 15.00, '2023-03-05'),
       (11, 5, 1, 20.00, '2023-03-05'),
       (13, 5, 3, 15.00, '2023-03-05'),
       (12, 1, 1, 20.00, '2023-03-05'),
       (13, 1, 3, 15.00, '2023-03-05'),
       (14, 2, 1, 20.00, '2023-03-05'),
       (15, 6, 3, 15.00, '2023-03-05'),
       (16, 9, 1, 20.00, '2023-03-05'),
       (17, 3, 3, 15.00, '2023-03-05'),
       (18, 2, 1, 20.00, '2023-03-05'),
       (12, 3, 3, 15.00, '2023-03-01'),
       (12, 3, 3, 15.00, '2023-03-01'),
       (12, 3, 3, 15.00, '2023-03-01'),
       (12, 3, 3, 15.00, '2023-03-01'),
       (12, 3, 3, 15.00, '2023-03-01'),
       (12, 3, 3, 15.00, '2023-03-01'),
       (12, 3, 3, 15.00, '2023-03-01'),
       (12, 3, 3, 15.00, '2023-03-01'),
       (12, 3, 3, 15.00, '2023-03-01'),
       (12, 3, 3, 15.00, '2023-03-05'),
       (12, 3, 3, 15.00, '2023-03-05'),
       (10, 5, 1, 20.00, '2023-03-05'),
       (1, 5, 3, 15.00, '2023-03-05'),
       (2, 1, 1, 20.00, '2023-03-05'),
       (3, 1, 3, 15.00, '2023-03-05'),
       (4, 2, 1, 20.00, '2023-03-05'),
       (5, 6, 3, 15.00, '2023-03-05'),
       (5, 9, 1, 20.00, '2023-03-05'),
       (6, 3, 3, 15.00, '2023-03-05'),
       (7, 2, 1, 20.00, '2023-03-05'),
       (8, 3, 3, 15.00, '2023-03-05'),
       (9, 2, 1, 20.00, '2023-03-05'),
       (10, 7, 3, 15.00, '2023-03-05'),
       (11, 5, 1, 20.00, '2023-03-05'),
       (13, 5, 3, 15.00, '2023-03-05'),
       (12, 1, 1, 20.00, '2023-03-05'),
       (13, 1, 3, 15.00, '2023-03-05'),
       (14, 2, 1, 20.00, '2023-03-05'),
       (15, 6, 3, 15.00, '2023-03-05'),
       (16, 9, 1, 20.00, '2023-03-05'),
       (17, 3, 3, 15.00, '2023-03-05'),
       (18, 2, 1, 20.00, '2023-03-05'),
       (1, 4, 3, 15.00, '2023-03-01'),
       (2, 3, 3, 15.00, '2023-03-01'),
       (1, 2, 3, 15.00, '2023-03-01'),
       (2, 1, 3, 15.00, '2023-03-01'),
       (1, 8, 3, 15.00, '2023-03-01'),
       (4, 7, 3, 15.00, '2023-03-01'),
       (3, 6, 3, 15.00, '2023-03-01'),
       (4, 5, 3, 15.00, '2023-03-01'),
       (3, 4, 3, 15.00, '2023-03-01'),
       (4, 3, 3, 15.00, '2023-03-05'),
       (3, 2, 3, 15.00, '2023-03-05'),
       (12, 1, 3, 15.00, '2023-03-05');

CREATE TABLE public.salespersons
(
    salesperson_id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    salesperson_name varchar(255) NOT NULL UNIQUE,
    email            varchar(255) NOT NULL
);

INSERT INTO public.salespersons(salesperson_name, email)
VALUES ('Jack', 'jack@test.com'),
       ('Tony', 'tony@test.com'),
       ('Jil', 'jil@test.com'),
       ('Owen', 'owen@test.com');

CREATE TABLE public.salesperson_product
(
    salesperson_product_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    salesperson_id         bigint,
    product_id             bigint,
    foreign key (salesperson_id) references public.salespersons (salesperson_id),
    foreign key (product_id) references public.product (product_id)
);

INSERT INTO public.salesperson_product(salesperson_id, product_id)
VALUES (1, 1),
       (1, 2),
       (2, 3),
       (2, 4),
       (3, 5),
       (3, 6),
       (4, 7),
       (4, 8),
       (4, 9);

-- 1. List the top 10 customers with the highest total order value for orders placed in the last month, including their name, email, and total order value.
SELECT public.customers.customer_name,
       public.customers.customer_email,
       SUM(public.order.quantity * public.order.unit_price)
           AS total_order_value
FROM public.customers
         JOIN public.order ON public.customers.customer_id = public.order.customer_id
WHERE date_trunc('month', public.order.order_date) = date_trunc('month', NOW() - INTERVAL '13 month')
GROUP BY public.customers.customer_id
--     GROUP BY statement: This groups the results by customer ID,
--     so that we can calculate the total order value for each customer.
ORDER BY total_order_value DESC
LIMIT 10;

-- 2. List return the top 5 most viewed products on the website, including their name, price, and number of views.
SELECT public.product.product_name,
       public.product.product_price,
       COUNT(public.product_view.view_date) AS number_of_views
FROM public.product
         JOIN product_view ON product.product_id = product_view.product_id
GROUP BY public.product.product_id
ORDER BY number_of_views DESC
LIMIT 5;

-- 3. List return the total revenue generated by each salesperson in the company for the previous month, including their name and email.
SELECT public.salespersons.salesperson_name,
       public.salespersons.email,
       SUM((public.order.quantity * public.order.unit_price) - (public.order.quantity * public.product.product_price))
           AS total_revenue
FROM public.product
         JOIN public.order ON public.product.product_id = public.order.product_id
         JOIN public.salesperson_product ON public.order.product_id = public.salesperson_product.product_id
         JOIN public.salespersons ON public.salesperson_product.salesperson_id = public.salespersons.salesperson_id
WHERE date_trunc('month', public.order.order_date) = date_trunc('month', NOW() - INTERVAL '14 month')
GROUP BY public.salespersons.salesperson_id
ORDER BY total_revenue DESC;

-- 4. List return 'Which product each customer ordered and how many times', including their names, products ordered, and the number of orders.
SELECT public.customers.customer_name,
       public.product.product_name,
       count(public.product.product_id) AS number_of_orders
FROM public.order
         JOIN public.customers ON public.order.customer_id = public.customers.customer_id
         JOIN public.product ON public.order.product_id = public.product.product_id
GROUP BY public.customers.customer_name, public.product.product_name
ORDER BY number_of_orders;

-- 5.List return the list of all products that have not been ordered in the last month, including their name and price.
SELECT public.product.product_name, public.product.product_price
FROM public.product
         LEFT JOIN public.order
                   ON public.product.product_id = public.order.product_id and
                      date_trunc('month', public.order.order_date) = date_trunc('month', NOW() - INTERVAL '13 month')
WHERE public.order.order_id IS NULL;

-- 6. List the top 5 customers with the highest total order amount and their corresponding salespeople's name.
SELECT public.customers.customer_name,
       public.salespersons.salesperson_name,
       SUM(public.order.quantity * public.order.unit_price)
           AS total_order_value
FROM public.customers
         JOIN public.order ON public.customers.customer_id = public.order.customer_id
         JOIN public.salesperson_product ON public.order.product_id = public.salesperson_product.product_id
         JOIN public.salespersons ON public.salesperson_product.salesperson_id = public.salespersons.salesperson_id
GROUP BY public.customers.customer_id, public.salespersons.salesperson_name
ORDER BY total_order_value DESC
LIMIT 5;


-- 7. List the customers who have viewed all the products.
SELECT public.customers.customer_name
FROM public.customers
         JOIN public.product_view ON public.customers.customer_id = public.product_view.customer_id
GROUP BY public.customers.customer_name
HAVING count(DISTINCT public.product_view.product_id) = (SELECT count(public.product.product_id) FROM public.product);

-- Additional table that indicates which buyer viewed how many products
SELECT count(DISTINCT public.product_view.product_id), customer_id
FROM public.product_view
GROUP BY public.product_view.customer_id;

-- 8. List the products that have been viewed by all customers and the total number of times they have been viewed.
SELECT public.product.product_name, product_viewed_by_all_customers.total_number_of_product_views
FROM public.product
         JOIN (SELECT public.product_view.product_id,
                      count(public.product_view.product_id) AS total_number_of_product_views
               FROM public.customers
                        JOIN public.product_view ON customers.customer_id = public.product_view.customer_id
               GROUP BY public.product_view.product_id
               HAVING count(DISTINCT public.product_view.customer_id) =
                      (SELECT count(public.customers.customer_id) FROM public.customers)) AS product_viewed_by_all_customers
              ON public.product.product_id = product_viewed_by_all_customers.product_id;

-- 9. List the customers who have placed an order in every month of the year 2022
SELECT public.customers.customer_id, public.customers.customer_name
FROM public.customers
WHERE public.customers.customer_id IN (SELECT public.order.customer_id
                                       FROM public.order
                                       WHERE date_trunc('year', public.order.order_date) = '2022-01-01'
                                       GROUP BY public.order.customer_id
                                       HAVING count(DISTINCT date_trunc('month', public.order.order_date)) = 12);

-- 10. List the salespeople who have at least two customers who have placed an order of the same product.
SELECT public.salespersons.salesperson_id, public.salespersons.salesperson_name
FROM public.salespersons
         JOIN public.salesperson_product spp1 ON public.salespersons.salesperson_id = spp1.salesperson_id
         JOIN public.order o1 ON spp1.product_id = o1.product_id
         JOIN public.salesperson_product spp2 ON public.salespersons.salesperson_id = spp2.salesperson_id
         JOIN public.order o2 ON spp2.product_id = o2.product_id
WHERE o1.customer_id <> o2.customer_id
  AND o1.product_id = o2.product_id
GROUP BY public.salespersons.salesperson_id, public.salespersons.salesperson_name
HAVING COUNT(DISTINCT o1.customer_id) >= 2;

-- 11. Query to return the top 5 customers who have made the most orders in the past year, including their name, email, and the number of orders they made.
SELECT public.customers.customer_name,
       public.customers.customer_email,
       COUNT(public.order.order_id) as number_of_orders_last_year
FROM public.customers
         JOIN public.order ON public.customers.customer_id = public.order.customer_id
WHERE date_trunc('year', public.order.order_date) = '2022-01-01'
GROUP BY public.customers.customer_name, public.customers.customer_email
ORDER BY number_of_orders_last_year DESC
LIMIT 5;

-- 12. Query to return the top 10 products that have been ordered the most in the past year, including the product name and the number of times it has been ordered.
SELECT public.product.product_name, COUNT(public.order.order_id) AS number_of_orders_last_year
FROM public.product
         JOIN public.order ON public.product.product_id = public.order.product_id
WHERE date_trunc('year', public.order.order_date) = '2022-01-01'
GROUP BY public.product.product_name
ORDER BY number_of_orders_last_year DESC
LIMIT 10;

-- 13. Query to return the top 3 most ordered products in the past month, including their name and the total quantity ordered.
SELECT public.product.product_name, SUM(public.order.quantity) AS total_quantity_ordered
FROM public.product
         JOIN public.order ON public.product.product_id = public.order.product_id
WHERE date_trunc('month', public.order.order_date) = date_trunc('month', NOW() - INTERVAL '1 month')
GROUP BY public.product.product_name
ORDER BY total_quantity_ordered DESC;

-- 14. Query to return the top 5 salespeople who have generated the most revenue from new customers in the past quarter, including their name, email, and total revenue from new customers. a new client is someone who joined at the last ago.
SELECT public.salespersons.salesperson_name,
       public.salespersons.email,
       SUM(public.order.quantity * public.order.unit_price) AS total_revenue
FROM public.salespersons
         JOIN public.salesperson_product
              ON public.salespersons.salesperson_id = public.salesperson_product.salesperson_id
         JOIN public.order ON public.salesperson_product.product_id = public.order.product_id
         JOIN public.customers ON public.order.customer_id = public.customers.customer_id
WHERE date_trunc('quarter', public.order.order_date) = '2023-01-01'
  AND date_trunc('month', public.order.order_date) >= date_trunc('month', NOW() - INTERVAL '12 month')
GROUP BY public.salespersons.salesperson_name, public.salespersons.email
ORDER BY total_revenue DESC
LIMIT 3;

-- 15. Query to return the top 10 customers with the highest average order value in the past year, including their name, email, and average order value.
SELECT public.customers.customer_name,
       public.customers.customer_email,
       AVG(public.order.quantity * public.order.unit_price) AS average_order_value
FROM public.customers
         JOIN public.order ON public.customers.customer_id = public.order.customer_id
WHERE date_trunc('year', public.order.order_date) = '2023-01-01'
GROUP BY public.customers.customer_name, public.customers.customer_email
ORDER BY average_order_value DESC
LIMIT 10;